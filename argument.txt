Tras analizar los requerimientos descritos en el fichero “Backend”, se ha llegado a los siguientes razonamientos.

1. Dado que el objetivo final del proyecto es almacenar la información de los códigos postales en una base de datos, y teniendo en cuenta que no menciona la necesidad o posible interés de llevar un registro de los ficheros concretos que se han “subido” al sistema, sumado a la naturaleza “sin estado” de la mayoría de las implementaciones de API’S actuales; se ha llegado a la conclusión de que almacenar el fichero CSV original es irrelevante.

2. Teniendo en cuenta la relativa sencillez y congruencia de la información relacionada con los códigos postales, se estima que una base de datos relacional común es mas que suficiente para dar solución al requerimiento de almacenamiento. Se ha escogido MariaDB por una mera cuestión de familiaridad.

3. Ya que no se especifica la necesidad de consultar, modificar o eliminar información de la base de datos y que los requerimientos definen un único EndPoint de uso concreto, no dependiente de un entorno gráfico se estima innecesario el uso de un Framework MVC tradicional, dado que no se aprovecharían sus prestaciones. Se ha optado por tanto por un enfoque mas ligero basado en FastAPI.

4. Entendiendo que el usuario (quien sube el fichero CSV) no requiere información sobre la consulta de los códigos postales, sino solamente un reporte del estado interno del fichero y considerando la demora que puede suponer esperar a que se resuelva la consulta al API de postcodes.io y la posterior persistencia de los datos; se ha decidido generar una respuesta para el usuario tan pronto como se verifique el contenido del fichero, dejando los procesos de consulta y almacenamiento para ser resueltos en segundo plano.

5. En aras de ahorrar consultas al API de postcodes.io se ha decidido implementar una registro de banderas en REDIS el cual permita determinar rápidamente si una coordenada ya ha sido consultada, sacándola del flujo de consulta/almacenamiento, logrando con ello en el mejor de los casos (un fichero con todas la coordenadas ya consultadas) que no sea necesario llamar al API externo, ni realizar escrituras en la base de datos.